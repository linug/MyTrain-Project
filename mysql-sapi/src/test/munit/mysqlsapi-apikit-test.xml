<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd http://www.mulesoft.org/schema/mule/munit-tools http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd ">
    <munit:config name="mysqlsapi-apikit-test.xml" />
    <http:request-config name="HTTP_Request_Configuration" basePath="/api">
        <http:request-connection host="localhost" port="8083" connectionIdleTimeout="500000"/>
    </http:request-config>
    <munit:test name="get:\users\(userId):mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users\(userId):mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\users\(userId):mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
			<set-variable value="#['00u3t6kba9dUpqi3f5d7']" doc:name="Set Variable" doc:id="288b6d5a-5331-4303-bc24-3f371b662205" variableName="userId"/>
			<munit-tools:mock-when doc:name="Mock when" doc:id="64301e07-50e1-40e5-b14f-65ed42aa95fe" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Select UserById" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="863a47d0-ed02-4b52-b08f-f6f882117820" attributeName="doc:id" />
					<munit-tools:with-attribute whereValue="Database_Config" attributeName="config-ref" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[output  application/json --- readUrl("classpath://scaffolder/response/get_200_users_{userid}_application_json2.json")]' mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value='#[output  application/json --- readUrl("classpath://scaffolder/response/statusCode.json")]' mediaType="application/json" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
        </munit:behavior>
        <munit:execution>
			<http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/users/$(vars.userId)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[payload]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_{userid}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users\(userId)\subscription\(SubscriptionId)\alert:mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users\(userId)\subscription\(SubscriptionId)\alert:mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\users\(userId)\subscription\(SubscriptionId)\alert:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="SubscriptionId" value="#['null']" doc:name="SubscriptionId" />
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/users/$(vars.userId)/subscription/$(vars.SubscriptionId)/alert']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_{userid}_subscription_{subscriptionid}_alert_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\users:application\json:mysqlsapi-config-201-application\json-FlowTest" description="Verifying functionality of [post:\users:application\json:mysqlsapi-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="post:\users:application\json:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_users_application_json.json')]" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="/users">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users\(userId)\subscription\(SubscriptionId)\alert\(alertId):mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users\(userId)\subscription\(SubscriptionId)\alert\(alertId):mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\users\(userId)\subscription\(SubscriptionId)\alert\(alertId):mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="SubscriptionId" value="#['null']" doc:name="SubscriptionId" />
            <set-variable variableName="alertId" value="#['null']" doc:name="alertId" />
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/users/$(vars.userId)/subscription/$(vars.SubscriptionId)/alert/$(vars.alertId)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_{userid}_subscription_{subscriptionid}_alert_{alertid}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\subsbedUsersForTimeWindow:mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\subsbedUsersForTimeWindow:mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\subsbedUsersForTimeWindow:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/subsbedUsersForTimeWindow">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:query-params>#[{"destloc":"WAT","srcloc":"BSK"}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_subsbedusersfortimewindow_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\subscribedUsers:mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\subscribedUsers:mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\subscribedUsers:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/subscribedUsers">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:query-params>#[{"createdafter":""}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_subscribedusers_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\users\(userId)\subscription\(SubscriptionId):application\json:mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [put:\users\(userId)\subscription\(SubscriptionId):application\json:mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="put:\users\(userId)\subscription\(SubscriptionId):application\json:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_users_{userid}_subscription_{subscriptionid}_application_json.json')]" />
            <set-variable variableName="SubscriptionId" value="#['null']" doc:name="SubscriptionId" />
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/users/$(vars.userId)/subscription/$(vars.SubscriptionId)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_200_users_{userid}_subscription_{subscriptionid}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\users\(userId)\subscription\(SubscriptionId)\alert:application\json:mysqlsapi-config-201-application\json-FlowTest" description="Verifying functionality of [post:\users\(userId)\subscription\(SubscriptionId)\alert:application\json:mysqlsapi-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="post:\users\(userId)\subscription\(SubscriptionId)\alert:application\json:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_users_{userid}_subscription_{subscriptionid}_alert_application_json.json')]" />
            <set-variable variableName="SubscriptionId" value="#['null']" doc:name="SubscriptionId" />
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="#['/users/$(vars.userId)/subscription/$(vars.SubscriptionId)/alert']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_users_{userid}_subscription_{subscriptionid}_alert_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\subsbedUsersForFromTime:mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\subsbedUsersForFromTime:mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\subsbedUsersForFromTime:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/subsbedUsersForFromTime">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:query-params>#[{"fromtime":"","destloc":"WAT","srcloc":"BSK"}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_subsbedusersforfromtime_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="post:\users\(userId)\subscription:application\json:mysqlsapi-config-201-application\json-FlowTest" description="Verifying functionality of [post:\users\(userId)\subscription:application\json:mysqlsapi-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="post:\users\(userId)\subscription:application\json:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/post_users_{userid}_subscription_application_json.json')]" />
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="POST" path="#['/users/$(vars.userId)/subscription']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/post_201_users_{userid}_subscription_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users\(userId)\subscription\(SubscriptionId):mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users\(userId)\subscription\(SubscriptionId):mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\users\(userId)\subscription\(SubscriptionId):mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="SubscriptionId" value="#['null']" doc:name="SubscriptionId" />
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/users/$(vars.userId)/subscription/$(vars.SubscriptionId)']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_{userid}_subscription_{subscriptionid}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="put:\users\(userId):application\json:mysqlsapi-config-400-application\json-FlowTest" description="Verifying functionality of [put:\users\(userId):application\json:mysqlsapi-config-400-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="put:\users\(userId):application\json:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-payload value="#[MunitTools::getResourceAsString('scaffolder/request/put_users_{userid}_application_json.json')]" />
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="PUT" path="#['/users/$(vars.userId)']">
                <http:headers>#[{"Accept":"application/json","Content-Type":"application/json"}]</http:headers>
                <http:response-validator>
                    <http:success-status-code-validator values="400" />
                </http:response-validator>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(400)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 400" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/put_400_users_{userid}_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users\(userId)\subscription:mysqlsapi-config-201-application\json-FlowTest" description="Verifying functionality of [get:\users\(userId)\subscription:mysqlsapi-config-201-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\users\(userId)\subscription:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:behavior>
            <set-variable variableName="userId" value="#['null']" doc:name="userId" />
        </munit:behavior>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="#['/users/$(vars.userId)/subscription']">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(201)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 201" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_201_users_{userid}_subscription_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users\QualifiedSubscriptions:mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users\QualifiedSubscriptions:mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\users\QualifiedSubscriptions:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users/QualifiedSubscriptions">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
                <http:query-params>#[{"StartTimeWithin":"120"}]</http:query-params>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_qualifiedsubscriptions_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
    <munit:test name="get:\users:mysqlsapi-config-200-application\json-FlowTest" description="Verifying functionality of [get:\users:mysqlsapi-config-200-application\json]" ignore="true">
        <munit:enable-flow-sources>
            <munit:enable-flow-source value="mysqlsapi-main" />
            <munit:enable-flow-source value="get:\users:mysqlsapi-config" />
        </munit:enable-flow-sources>
        <munit:execution>
            <http:request config-ref="HTTP_Request_Configuration" method="GET" path="/users">
                <http:headers>#[{"Accept":"application/json"}]</http:headers>
            </http:request>
        </munit:execution>
        <munit:validation>
            <munit-tools:assert-that expression="#[attributes.statusCode]" is="#[MunitTools::equalTo(200)]" message="The HTTP Status code is not correct!" doc:name="Assert That Status Code is 200" />
            <munit-tools:assert-that expression="#[output application/java ---write(payload, 'application/json') as String]" is="#[MunitTools::equalTo(MunitTools::getResourceAsString('scaffolder/response/get_200_users_application_json.json'))]" message="The response payload is not correct!" doc:name="Assert That - Payload is Expected" />
        </munit:validation>
    </munit:test>
</mule>
